{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","redux/contacts/contacts-action.js","components/Contact/Contact.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filteredContacts","Contact","useSelector","state","contacts","items","filter","dispatch","useDispatch","filtedContacts","item","toLowerCase","includes","className","styles","contactList","map","contactItem","spanName","spanNumber","type","onClick","contactButton","Form","useState","setName","setNumber","handleInputChange","event","currentTarget","value","onSubmit","preventDefault","some","Notiflix","Notify","warning","form","labelInput","title","input","onChange","pattern","placeholder","required","buttonForm","Filter","inputSearch","target","button","App","useEffect","window","localStorage","setItem","JSON","stringify","container","section","mainTitle","parse","getItem","reducerContacts","createReducer","reducerFilter","_","combineReducers","rootReducer","reducerPhonebook","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f3baaaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSearch\":\"Filter_inputSearch__1S3eE\",\"button\":\"Filter_button__3i4LI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__6GCuf\",\"buttonForm\":\"Form_buttonForm__2gIdr\",\"title\":\"Form_title__11XY9\",\"mainTitle\":\"Form_mainTitle__1BLje\",\"section\":\"Form_section__otcwU\",\"form\":\"Form_form__30TXX\",\"labelInput\":\"Form_labelInput__1MnB3\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction(\"contact/delete\");\r\nconst filteredContacts = createAction(\"contact/filter\");\r\n\r\nexport { addContact, deleteContact, filteredContacts };\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.css\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-action\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Contact = () => {\r\n  const { items, filter } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const filtedContacts = items.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n      item.number.includes(filter)\r\n  );\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filtedContacts.map((item) => (\r\n        <li key={item.id} className={styles.contactItem}>\r\n          <span className={styles.spanName}>{item.name}</span>\r\n          <span className={styles.spanNumber}>{item.number}</span>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => dispatch(deleteContact(item.id))}\r\n            className={styles.contactButton}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  filtedContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport { addContact } from \"../../redux/contacts/contacts-action\";\r\nimport Notiflix from \"notiflix\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const { items } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const formSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (items.some((item) => name.toLowerCase() === item.name.toLowerCase())) {\r\n      return Notiflix.Notify.warning(`${name} is already in contacts`);\r\n    } else if (\r\n      items.some((item) => number.toLowerCase() === item.number.toLowerCase())\r\n    ) {\r\n      return Notiflix.Notify.warning(`${number} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmit} className={styles.form}>\r\n      <label className={styles.labelInput}>\r\n        <h3 className={styles.title}>Name</h3>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          placeholder=\"Name\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.labelInput}>\r\n        <h3 className={styles.title}>Number</h3>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.buttonForm} type=\"submit\">\r\n        Add name\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { filteredContacts } from \"../../redux/contacts/contacts-action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const { filter } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.inputSearch}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(event) => dispatch(filteredContacts(event.target.value))}\r\n        placeholder=\"Search contact\"\r\n      />\r\n      <button className={styles.button} type=\"submit\">\r\n        Search\r\n      </button>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import \"./App.css\";\nimport styles from \"../components/Form/Form.module.css\";\nimport Contact from \"../components/Contact/Contact\";\nimport Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const App = () => {\n  const { items } = useSelector((state) => state.contacts);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.section}>\n        <h1 className={styles.mainTitle}>Phonebook</h1>\n        <Form />\n        <h2 className={styles.mainTitle}>Contacts</h2>\n        <Filter />\n        <Contact />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filteredContacts } from \"./contacts-action\";\r\n\r\nconst contacts = {\r\n  filter: \"\",\r\n  items: JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [],\r\n};\r\n\r\nconst reducerContacts = createReducer(contacts.items, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst reducerFilter = createReducer(contacts.filter, {\r\n  [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: reducerContacts,\r\n  filter: reducerFilter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducerPhonebook from \"./contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: reducerPhonebook,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport \"./reset.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"Contact_contactButton__Qmoq8\",\"contactItem\":\"Contact_contactItem__26h3O\",\"spanName\":\"Contact_spanName__3xK62\",\"spanNumber\":\"Contact_spanNumber__2tTob\"};"],"sourceRoot":""}