{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Contact/Contact.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filteredContactsRequest","filteredContactsSuccess","filteredContactsError","filteredContacts","axios","defaults","baseURL","getItems","state","contacts","items","getVisibleContacts","filter","getFilter","item","name","toLowerCase","includes","number","Contact","dispatch","useDispatch","filtedContacts","useSelector","className","styles","contactList","map","contactItem","spanName","spanNumber","type","onClick","id","delete","then","catch","error","contactButton","Form","useState","setName","setNumber","handleInputChange","event","currentTarget","value","onSubmit","preventDefault","some","Notiflix","Notify","warning","contact","post","data","addContact","form","labelInput","title","input","onChange","pattern","placeholder","required","buttonForm","Filter","inputSearch","target","button","App","useEffect","get","container","section","mainTitle","reducerContacts","createReducer","_","action","payload","reducerFilter","combineReducers","rootReducer","reducerPhonebook","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9dfad6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSearch\":\"Filter_inputSearch__1S3eE\",\"button\":\"Filter_button__3i4LI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__6GCuf\",\"buttonForm\":\"Form_buttonForm__2gIdr\",\"title\":\"Form_title__11XY9\",\"mainTitle\":\"Form_mainTitle__1BLje\",\"section\":\"Form_section__otcwU\",\"form\":\"Form_form__30TXX\",\"labelInput\":\"Form_labelInput__1MnB3\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contact/addContactSuccess\");\r\nexport const addContactError = createAction(\"contact/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contact/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contact/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contact/deleteContactError\");\r\n\r\nexport const filteredContactsRequest = createAction(\r\n  \"contact/filteredContactsRequest\"\r\n);\r\nexport const filteredContactsSuccess = createAction(\r\n  \"contact/filteredContactsSuccess\"\r\n);\r\nexport const filteredContactsError = createAction(\r\n  \"contact/filteredContactsError\"\r\n);\r\nexport const filteredContacts = createAction(\"contact/filter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  filteredContactsRequest,\r\n  filteredContactsSuccess,\r\n  filteredContactsError,\r\n} from \"./contacts-action\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(filteredContactsRequest());\r\n\r\n  axios\r\n    .get(\"contacts\")\r\n    .then(({ data }) => dispatch(filteredContactsSuccess(data)))\r\n    .catch((error) => dispatch(filteredContactsError(error)));\r\n};\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const filter = getFilter(state);\r\n  const items = getItems(state);\r\n\r\n  return items.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n      item.number.includes(filter)\r\n  );\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.css\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Contact = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const filtedContacts = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filtedContacts.map((item) => (\r\n        <li key={item.id} className={styles.contactItem}>\r\n          <span className={styles.spanName}>{item.name}</span>\r\n          <span className={styles.spanNumber}>{item.number}</span>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => dispatch(deleteContact(item.id))}\r\n            className={styles.contactButton}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  filtedContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport Notiflix from \"notiflix\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const formSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (items.some((item) => name.toLowerCase() === item.name.toLowerCase())) {\r\n      return Notiflix.Notify.warning(`${name} is already in contacts`);\r\n    } else if (\r\n      items.some((item) => number.toLowerCase() === item.number.toLowerCase())\r\n    ) {\r\n      return Notiflix.Notify.warning(`${number} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmit} className={styles.form}>\r\n      <label className={styles.labelInput}>\r\n        <h3 className={styles.title}>Name</h3>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          placeholder=\"Name\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.labelInput}>\r\n        <h3 className={styles.title}>Number</h3>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.buttonForm} type=\"submit\">\r\n        Add name\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { filteredContacts } from \"../../redux/contacts/contacts-action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const { filter } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.inputSearch}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(event) => dispatch(filteredContacts(event.target.value))}\r\n        placeholder=\"Search contact\"\r\n      />\r\n      <button className={styles.button} type=\"submit\">\r\n        Search\r\n      </button>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import \"./App.css\";\nimport styles from \"../components/Form/Form.module.css\";\nimport Contact from \"../components/Contact/Contact\";\nimport Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../redux/contacts/contacts-operations\";\nimport { useDispatch } from \"react-redux\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.section}>\n        <h1 className={styles.mainTitle}>Phonebook</h1>\n        <Form />\n        <h2 className={styles.mainTitle}>Contacts</h2>\n        <Filter />\n        <Contact />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  filteredContacts,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  filteredContactsSuccess,\r\n} from \"./contacts-action\";\r\n\r\nconst contacts = {\r\n  filter: \"\",\r\n  items: [],\r\n};\r\n\r\nconst reducerContacts = createReducer(contacts.items, {\r\n  [filteredContactsSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst reducerFilter = createReducer(contacts.filter, {\r\n  [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: reducerContacts,\r\n  filter: reducerFilter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducerPhonebook from \"./contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: reducerPhonebook,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport \"./reset.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"Contact_contactButton__Qmoq8\",\"contactItem\":\"Contact_contactItem__26h3O\",\"spanName\":\"Contact_spanName__3xK62\",\"spanNumber\":\"Contact_spanNumber__2tTob\"};"],"sourceRoot":""}